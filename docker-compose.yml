services:
  backend:
    image: rattantiwana/gmail-automation-backend:v1
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
        - ./credentials.json:/app/credentials.json:ro
        - ./token.json:/app/token.json
  frontend:
    image: rattantiwana/gmail-automation-frontend:v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
#secrets:
#  credentials:
#    file: ./credentials.json
           

    # def _get_gmail_service(self):
    #     creds = None
    #     if os.path.exists('/app/token.json'):
    #         creds = Credentials.from_authorized_user_file('/app/token.json', SCOPES)
    #     if not creds or not creds.valid:
    #         if creds and creds.expired and creds.refresh_token:
    #             creds.refresh(Request())
    #         else:
    #             flow = InstalledAppFlow.from_client_secrets_file('/app/credentials.json', SCOPES)
    #             creds = flow.run_local_server(port=0)
    #         with open('/app/token.json', 'w') as token:
    #             token.write(creds.to_json())
